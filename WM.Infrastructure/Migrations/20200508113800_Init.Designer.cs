// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WM.Infrastructure.Data;

namespace WM.Infrastructure.Migrations
{
    [DbContext(typeof(ApplContext))]
    [Migration("20200508113800_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WM.Core.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Drink"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Food"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Cofee"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Beer draft"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Beer bottle"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Juice"
                        });
                });

            modelBuilder.Entity("WM.Core.Entities.Manufacturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressLine")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("County")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipPostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Manufacturer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Apatin",
                            Name = "Proizvodjac 1"
                        },
                        new
                        {
                            Id = 2,
                            City = "Beograd",
                            Name = "Proizvodjac 2"
                        },
                        new
                        {
                            Id = 3,
                            City = "Beograd",
                            Name = "Proizvodjac 3"
                        });
                });

            modelBuilder.Entity("WM.Core.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(8,2)");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 4,
                            ManufacturerId = 1,
                            Name = "Nik toceno 0.5",
                            Price = 130m,
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 4,
                            ManufacturerId = 1,
                            Name = "Jelen toceno 0.5",
                            Price = 130m
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            ManufacturerId = 2,
                            Name = "Domaca kafa",
                            Price = 110m
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 3,
                            ManufacturerId = 2,
                            Name = "Cappuccino",
                            Price = 130m
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 5,
                            ManufacturerId = 3,
                            Name = "Budweiser 0.5",
                            Price = 140m
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 5,
                            ManufacturerId = 3,
                            Name = "Tuborg 0.5",
                            Price = 140m
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 6,
                            ManufacturerId = 3,
                            Name = "Breskva 0.2",
                            Price = 140m
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 6,
                            ManufacturerId = 3,
                            Name = "Sumsko voce 0.2",
                            Price = 140m
                        });
                });

            modelBuilder.Entity("WM.Core.Entities.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressLine")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("County")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipPostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Supplier");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Supplier 1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Supplier 2"
                        });
                });

            modelBuilder.Entity("WM.Core.Entities.Product", b =>
                {
                    b.HasOne("WM.Core.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WM.Core.Entities.Manufacturer", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId");

                    b.HasOne("WM.Core.Entities.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId");
                });
#pragma warning restore 612, 618
        }
    }
}
